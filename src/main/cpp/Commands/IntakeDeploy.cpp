// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Commands/IntakeDeploy.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

IntakeDeploy::IntakeDeploy(): frc::Command() {
    // Use Requires() here to declare subsystem dependencies
    // eg. Requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::intake.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
bool intakeDone = false;
void IntakeDeploy::Initialize() {
    if (Robot::magazine->GetBallCount() < 2) {
        intakeDone = false;
        Robot::intake->DeployIntake();
        Robot::intake->SetPusherPower(0.8);
        Robot::intake->SetRollerPower(0.8);
        Robot::magazine->SetIsDeployed(true);
        Robot::magazine->SetHopperPower(-0.8);
    }
    else intakeDone = true; //false means we are done and should life the intake
}

// Called repeatedly when this Command is scheduled to run
void IntakeDeploy::Execute() {
    //intakeDone = Robot::magazine->GetIsDeployed();
    if (Robot::magazine->GetBallCount() == 2) {
        intakeDone = true;
    }
}

// Make this return true when this Command no longer needs to run execute()
bool IntakeDeploy::IsFinished() {
    return intakeDone;
}

// Called once after isFinished returns true
void IntakeDeploy::End() {
    Robot::intake->RetractIntake();
    Robot::intake->SetRollerPower(0);
    Robot::intake->SetPusherPower(0);
    //Robot::magazine->SetHopperPower(0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void IntakeDeploy::Interrupted() {

}
