// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Commands/AutoAim.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

AutoAim::AutoAim(): frc::Command() {
    // Use Requires() here to declare subsystem dependencies
    // eg. Requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooter.get());
    Requires(Robot::driveTrain.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
bool doneAutoAim = false;
int isAimedCnt = 0;
double currentGyroValue = 0;
auto originalTimeForHoodMovement = 0_s;
void AutoAim::Initialize() {
    currentGyroValue = Robot::driveTrain->getGyroReading();
    originalTimeForHoodMovement = frc::Timer::GetFPGATimestamp();
    //Robot::driveTrain->setLimeLED(true);
}

// Called repeatedly when this Command is scheduled to run
void AutoAim::Execute() {
    Robot::shooter->SetHoodCloseShot();
    if (frc::Timer::GetFPGATimestamp() - originalTimeForHoodMovement > 0.5_s) { //give time for the hood to move
        if (Robot::shooter->SetShooterVelocity(3700, 50)) {
            Robot::intake->SetIsShooting(true);
            Robot::intake->SetIndexerPower(-0.4);
        }
        else {
            Robot::intake->SetIndexerPower(0);
        }
    }
    //doneAutoAim = Robot::driveTrain->GyroTurn(Robot::driveTrain->getGyroReading(), 120, 0.009, 0, 0); //0.0000007

    // if (Robot::driveTrain->autoAim(2) < 1) {
    //     isAimedCnt++;
    // }
    // if (isAimedCnt > 50) {
    //     doneAutoAim = true;
    // }
}

// Make this return true when this Command no longer needs to run execute()
bool AutoAim::IsFinished() {
    return doneAutoAim;
}

// Called once after isFinished returns true
void AutoAim::End() {
    Robot::intake->SetIsShooting(false);
    isAimedCnt = 0;
    doneAutoAim = false;
    //Robot::driveTrain->setLimeLED(false);
    //Robot::driveTrain->SetLeftPower(0);
    //Robot::driveTrain->SetRightPower(0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutoAim::Interrupted() {
    End();
}
